
service: proj-alpha-backend
frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-plugin-ifelse

custom:
  currentStage: ${opt:stage, self:provider.stage}
  serverlessIfElse:
    - If: '"${self:custom.currentStage}" == "dev"'
      Exclude:
        - functions.postTask.events.0.http.authorizer
        - functions.getAllTask.events.0.http.authorizer
        - functions.getTask.events.0.http.authorizer
        - functions.deleteTask.events.0.http.authorizer

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  timeout: 5
  memorySize: 128
  environment:
    DYNAMO_TABLE: ${self:service}-table-${opt:stage, self:provider.stage}
  iam:
    role:
      statements: 
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          - dynamodb:Scan
          - dynamodb:GetItem
        Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMO_TABLE}"

# create a dynamoDB
resources:
  Resources:
    DynamoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMO_TABLE}
        AttributeDefinitions:
          - AttributeName: task_id
            AttributeType: S
          - AttributeName: task_author
            AttributeType: S
        KeySchema:
          - AttributeName: task_id
            KeyType: RANGE 
          - AttributeName: task_author
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        
              


        



functions:
  postTask:
    handler: api/postTask.handle
    events:
      - http:
          path: /posttask
          method: post
          cors: true
          authorizer:
            name: auth
            arn: arn:aws:cognito-idp:us-east-1:380653978671:userpool/us-east-1_EKDKvEztJ

  getAllTask:
    handler: api/getAllTask.handle
    events:
      - http:
          path: /getall
          method: get
          cors: true
          authorizer:
            name: auth
            arn: arn:aws:cognito-idp:us-east-1:380653978671:userpool/us-east-1_EKDKvEztJ

  getTask:
    handler: api/getTask.handle
    events:
      - http:
          path: /get/{task_id}
          cors: true
          method: get
          authorizer:
            name: auth
            arn: arn:aws:cognito-idp:us-east-1:380653978671:userpool/us-east-1_EKDKvEztJ

  deleteTask:
    handler: api/deleteTask.handle
    events:
      - http:
          path: /deleteTask/{task_id}
          cors: true
          method: delete
          authorizer:
            name: auth
            arn: arn:aws:cognito-idp:us-east-1:380653978671:userpool/us-east-1_EKDKvEztJ



